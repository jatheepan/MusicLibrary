{"version":3,"sources":["songs sync /^/.//.*$","songs/sample1.mp3","songs/sample10.mp3","songs/sample11.mp3","songs/sample12.mp3","songs/sample2.mp3","songs/sample3.mp3","songs/sample4.mp3","songs/sample5.mp3","songs/sample6.mp3","songs/sample7.mp3","songs/sample8.mp3","songs/sample9.mp3","collections/db.js","services/library.js","actions.js","components/songsList/index.js","components/albumList/index.js","components/LoadSpinner.js","components/AppHeader.js","components/player/index.js","App.js","serviceWorker.js","reducers.js","store.js","index.js"],"names":["map","./sample1.mp3","./sample10.mp3","./sample11.mp3","./sample12.mp3","./sample2.mp3","./sample3.mp3","./sample4.mp3","./sample5.mp3","./sample6.mp3","./sample7.mp3","./sample8.mp3","./sample9.mp3","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","playlist","playlistCollection","playlistLastItemId","length","delayedResolve","payload","Promise","setTimeout","getSongs","query","arguments","undefined","sort","property","direction","songs","songsCollection","song","album","albumsCollection","find","a","album_id","list","concat","b","value1","value2","title","artist","duration","toLowerCase","result","sortList","trim","filter","item","pattern","RegExp","test","filterList","_callee","regenerator_default","wrap","_context","prev","next","sent","abrupt","s","song_id","stop","_callee2","nextId","_context2","push","_callee3","_context3","i","db","getAlbums","_ref","getPlaylist","addToPlaylist","replacePlaylist","library","SONGS_WILL_FETCH","SONGS_DID_FETCH","SONGS_FETCH_ERROR","SORT_SONGS","UPDATE_SEARCH_QUERY","ADD_TO_PLAYLIST","ALBUMS_WILL_FETCH","ALBUMS_DID_FETCH","ALBUMS_FETCH_ERROR","PLAYLIST_WILL_FETCH","PLAYLIST_DID_FETCH","PLAYLIST_FETCH_ERROR","PLAYLIST_CHANGE_CURRENT_SONG","PLAYLIST_PLAY_NEXT_SONG","PLAYER_STATUS_UPDATE","REPLACE_PLAYLIST","actions","dispatch","type","then","catch","error","updateSort","updateQuery","changeCurrentSong","playNextSong","console","updatePlayerStatus","status","SongsList","newProperty","_this","props","fetchSongs","memoize","_this$props","this","_this2","_this$props2","loading","listItems","react_default","createElement","key","className","toFixed","index_es","icon","onClick","errorMessage","songsList_SortIcon","name","Component","SortIcon","_ref2","asc","desc","connect","_ref$songsList","songsList","_ref$global","global","AlbumList","albums","src","thumbnail","alt","_ref$albumList","albumList","newSongs","LoadSpinner","classNames","_ref2$global","searchRef","packageJson","version","ref","defaultValue","placeholder","onKeyUp","target","value","keyCode","Player","audio","updateCurrentTimeFn","state","currentTime","playSong","currentSong","selectedPlaylistItemId","fileUri","file","audioFile","pause","removeEventListener","loadedMetaDataCallbackFn","playCallbackFn","pauseCallbackFn","endedCallbackFn","require","Audio","play","toggleSong","setState","setInterval","clearInterval","updateCurrentTime","addEventListener","_ref3","AlbumThumbnailControl","onControlClick","player_Timeline","onSeek","time","Playlist","_ref4","items","index","currentSongIndicator","_ref6","image","style","color","backgroundImage","controlIcon","Timeline","_this3","indicatorPosition","width","barX","getBoundingClientRect","left","clientX","_ref5","player","pageChange","page","add","faCaretUp","faCaretDown","faSearch","faCompactDisc","faMusic","faPlus","faPlay","faPause","Boolean","window","location","hostname","match","combineReducers","initialState","assign","currentSongIndex","findIndex","nextSong","composeArgs","applyMiddleware","thunk","store","createStore","rootReducer","compose","apply","ReactDOM","render","es","components_AppHeader","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce6d885e.chunk.js","sourcesContent":["var map = {\n\t\"./sample1.mp3\": 48,\n\t\"./sample10.mp3\": 49,\n\t\"./sample11.mp3\": 50,\n\t\"./sample12.mp3\": 51,\n\t\"./sample2.mp3\": 52,\n\t\"./sample3.mp3\": 53,\n\t\"./sample4.mp3\": 54,\n\t\"./sample5.mp3\": 55,\n\t\"./sample6.mp3\": 56,\n\t\"./sample7.mp3\": 57,\n\t\"./sample8.mp3\": 58,\n\t\"./sample9.mp3\": 59\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 47;","module.exports = __webpack_public_path__ + \"static/media/sample1.dd955e25.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample10.3f3c2fa5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample11.b17f938f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample12.67f34480.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample2.e761de1a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample3.7e0c10ce.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample4.bfe7fb25.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample5.c2e5fc2f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample6.72a7a470.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample7.508dd444.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample8.6f257638.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sample9.fa355b13.mp3\";","/**\n *\n * This is a mock database.\n *\n */\n\nimport albumsCollection from './albums.json';\nimport songsCollection from './songs.json';\nimport playlistCollection from './playlist.json';\n\nlet playlist = playlistCollection;\nlet playlistLastItemId = playlistCollection.length;\n/**\n * Just to simulate the delay of real api calls.\n * @param payload\n*/\nfunction delayedResolve(payload) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(payload), 100);\n  });\n}\n\nfunction getAlbums() {\n  const songs = songsCollection;\n  const albums = albumsCollection.map(album => {\n    album.songs = songs.filter(({album_id}) => album_id === album.id);\n    return album;\n  });\n  return delayedResolve(albums);\n}\n\nfunction getSongs(query = '', sort = {property: 'title', direction: 'asc'}) {\n  let songs = songsCollection.map(song => {\n    const album = albumsCollection.find(a => a.id === song.album_id);\n    if(album) {\n      song.album = album;\n    }\n    return song;\n  });\n\n  songs = sortList(filterList(songs, query), sort);\n  return delayedResolve(songs);\n}\n\nasync function getPlaylist() {\n  const songs = await getSongs();\n  return playlist.map(p => {\n    const song = songs.find(s => s.id === p.song_id);\n    if(song) {\n      p.song = song;\n    }\n    return p;\n  });\n}\n\nasync function addToPlaylist(song) {\n  const nextId = playlistLastItemId + 1;\n\n  playlist.push({\n    id: nextId,\n    song_id: song.id,\n    song\n  });\n  playlistLastItemId = nextId;\n  return [].concat(playlist);\n}\n\nasync function replacePlaylist(songs) {\n  playlist = songs.map((p, i) => {\n    const song = songs.find(s => s.id === p.song_id);\n    if(song) {\n      p.song = song;\n    }\n    p.id = i + 1;\n    return p;\n  });\n  playlistLastItemId = playlist.length;\n  return [].concat(playlist);\n}\n\nfunction filterList(list, query) {\n  query = (query || '').trim();\n  if(query.length < 1) return list;\n  return list.filter(item => {\n    const pattern = new RegExp(query, 'gi');\n    if(item.title && pattern.test(item.title)) {\n      return true;\n    } else if(item.album && item.album.title && pattern.test(item.album.title)) {\n      return true;\n    } else if(item.album && item.album.artist && pattern.test(item.album.artist)) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n}\n\nfunction sortList(list, sort) {\n  const newList = [].concat(list);\n  return newList.sort((a, b) => {\n    let value1, value2 = null;\n    if(sort.property === 'title') {\n      value1 = a.title;\n      value2 = b.title;\n    } else if(sort.property === 'album') {\n      value1 = a.album.title;\n      value2 = b.album.title;\n    } else if(sort.property === 'artist') {\n      value1 = a.album.artist;\n      value2 = b.album.artist;\n    } else if(sort.property === 'duration') {\n      value1 = a.duration;\n      value2 = b.duration;\n    }\n    value1 = (typeof value1 === \"string\") ? value1.toLowerCase() : value1;\n    value2 = (typeof value2 === \"string\") ? value2.toLowerCase() : value2;\n\n    if(value1 === value2) return 0;\n    let result = value1 > value2;\n    result = sort.direction === 'desc' ? !result : result;\n    return result ? 1 : -1;\n  });\n}\n\nexport default {\n  getAlbums,\n  getSongs,\n  getPlaylist,\n  addToPlaylist,\n  replacePlaylist\n};\n","import db from '../collections/db';\n\nfunction getSongs(query, sort) {\n  return db.getSongs(query, sort);\n}\n\nfunction getAlbums(query) {\n  return db.getAlbums(query);\n}\n\nfunction getPlaylist() {\n  return db.getPlaylist();\n}\n\nfunction addToPlaylist(song) {\n  return db.addToPlaylist(song);\n}\n\nfunction replacePlaylist(songs) {\n  return db.replacePlaylist(songs);\n}\n\nexport default {\n  getSongs,\n  getAlbums,\n  getPlaylist,\n  addToPlaylist,\n  replacePlaylist\n};\n","import library from './services/library';\n\nconst SONGS_WILL_FETCH = 'SONGS_WILL_FETCH';\nconst SONGS_DID_FETCH = 'SONGS_DID_FETCH';\nconst SONGS_FETCH_ERROR = 'SONGS_FETCH_ERROR';\nconst SORT_SONGS = 'SORT_SONGS';\nconst UPDATE_SEARCH_QUERY = 'UPDATE_SEARCH_QUERY';\nconst ADD_TO_PLAYLIST = 'ADD_TO_PLAYLIST';\n\nconst ALBUMS_WILL_FETCH = 'ALBUMS_WILL_FETCH';\nconst ALBUMS_DID_FETCH = 'ALBUMS_DID_FETCH';\nconst ALBUMS_FETCH_ERROR = 'ALBUMS_FETCH_ERROR';\n\nconst PLAYLIST_WILL_FETCH = 'PLAYLIST_WILL_FETCH';\nconst PLAYLIST_DID_FETCH = 'PLAYLIST_DID_FETCH';\nconst PLAYLIST_FETCH_ERROR = 'PLAYLIST_FETCH_ERROR';\nconst PLAYLIST_CHANGE_CURRENT_SONG = 'PLAYLIST_CHANGE_CURRENT_SONG';\nconst PLAYLIST_PLAY_NEXT_SONG = 'PLAYLIST_PLAY_NEXT_SONG';\n\nconst PLAYER_STATUS_UPDATE = 'PLAYER_STATUS_UPDATE';\nconst REPLACE_PLAYLIST = 'REPLACE_PLAYLIST';\n\n/**\n * Get or Search songs.\n * @param query\n * @param sort\n */\nconst getSongs = (query, sort) => dispatch => {\n  dispatch({\n    type: SONGS_WILL_FETCH,\n    payload: null\n  });\n\n  library.getSongs(query, sort)\n    .then(songs => dispatch({\n      type: SONGS_DID_FETCH,\n      payload: songs\n    }))\n    .catch(error => dispatch({\n      type: SONGS_FETCH_ERROR,\n      payload: error\n    }));\n}\n\n/**\n * Sort songs list.\n * @param sort\n * @returns {{type: string, payload: *}}\n */\nconst updateSort = sort => ({\n  type: SORT_SONGS,\n  payload: sort\n});\n\n\n/**\n * Update search query.\n * @param query\n */\nconst updateQuery = query => ({\n  type: UPDATE_SEARCH_QUERY,\n  payload: query\n});\n\nconst getAlbums = () => dispatch => {\n  dispatch({\n    type: ALBUMS_WILL_FETCH,\n    payload: null\n  });\n\n  library.getAlbums()\n    .then(songs => dispatch({\n      type: ALBUMS_DID_FETCH,\n      payload: songs\n    }))\n    .catch(error => dispatch({\n      type: SONGS_FETCH_ERROR,\n      payload: error\n    }));\n};\n\n/**\n * To load playlist on page load.\n */\nconst getPlaylist = () => dispatch => {\n  dispatch({\n    type: PLAYLIST_WILL_FETCH,\n    payload: null\n  });\n\n  library.getPlaylist()\n    .then(list => dispatch({\n      type: PLAYLIST_DID_FETCH,\n      payload: list\n    }))\n    .catch(error => dispatch({\n      type: PLAYLIST_FETCH_ERROR,\n      payload: error\n    }));\n};\n\n/**\n * Change currently playing song\n * @param item\n */\nconst changeCurrentSong = item => dispatch => {\n  dispatch ({\n    type: PLAYLIST_CHANGE_CURRENT_SONG,\n    payload: item\n  });\n};\n\nconst playNextSong = () => dispatch => {\n  dispatch({\n    type: PLAYLIST_PLAY_NEXT_SONG,\n    payload: null\n  });\n}\n/**\n * Add single song to playlist.\n * @param song\n */\nconst addToPlaylist = song => dispatch => {\n  library.addToPlaylist(song)\n    .then(playlist => dispatch({\n      type: ADD_TO_PLAYLIST,\n      payload: playlist\n    }))\n    .catch(console.error);\n};\n\n/**\n * Replace playlist with many songs.\n * Used by album clicks.\n * @param songs\n */\nconst replacePlaylist = songs => dispatch => {\n  library.replacePlaylist(songs)\n    .then(playlist => dispatch({\n      type: REPLACE_PLAYLIST,\n      payload: songs\n    }))\n  .catch(console.error);\n};\n\n/**\n * Responsible for player's behaviour.\n * @param status\n */\nconst updatePlayerStatus = status => dispatch => {\n  dispatch({\n    type: PLAYER_STATUS_UPDATE,\n    payload: status\n  })\n}\n\nexport default {\n  getSongs,\n  updateSort,\n  updateQuery,\n  getAlbums,\n  getPlaylist,\n  changeCurrentSong,\n  playNextSong,\n  addToPlaylist,\n  replacePlaylist,\n  updatePlayerStatus\n};\n\nexport {\n  SONGS_WILL_FETCH,\n  SONGS_DID_FETCH,\n  SONGS_FETCH_ERROR,\n  SORT_SONGS,\n  ADD_TO_PLAYLIST,\n  UPDATE_SEARCH_QUERY,\n  ALBUMS_WILL_FETCH,\n  ALBUMS_DID_FETCH,\n  ALBUMS_FETCH_ERROR,\n  PLAYLIST_WILL_FETCH,\n  PLAYLIST_DID_FETCH,\n  PLAYLIST_FETCH_ERROR,\n  PLAYLIST_CHANGE_CURRENT_SONG,\n  PLAYLIST_PLAY_NEXT_SONG,\n  PLAYER_STATUS_UPDATE,\n  REPLACE_PLAYLIST\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport memoize from 'memoize-one';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport actions from '../../actions';\nimport './style.scss';\n\nclass SongsList extends Component {\n  componentDidMount() {\n    const {sort, query} = this.props;\n    this.props.getSongs(query, sort);\n  }\n\n  sort = newProperty => {\n    let {sort} = this.props;\n    if(newProperty === sort.property) {\n      sort.direction = sort.direction === 'asc' ? 'desc': 'asc';\n    }\n    sort.property = newProperty;\n    this.props.updateSort(sort);\n    this.fetchSongs();\n  };\n\n  fetchSongs = memoize(query => this.props.getSongs(query, this.props.sort));\n\n  render() {\n    this.fetchSongs(this.props.query);\n    const {songs, error, loading} = this.props;\n    const listItems = songs.map(song => (\n      <div key={song.id} className=\"table-row\">\n        <div className=\"column title\">{song.title}</div>\n        <div className=\"column album\">{song.album.title}</div>\n        <div className=\"column artist\">{song.album.artist}</div>\n        <div className=\"column duration\">{song.duration.toFixed(2)}</div>\n        <div className=\"controls\">\n          <FontAwesomeIcon icon=\"plus\" className=\"plus\" onClick={() => this.props.addToPlaylist(song)} />\n        </div>\n      </div>\n    ));\n    const errorMessage = !error ? null : (<div className=\"error message\">{error}</div>);\n    return (\n      <div className=\"SongsList\">\n        {errorMessage}\n        <h1>Songs</h1>\n        <div className=\"table\">\n          <div className=\"table-header\">\n            <div className=\"column title\" onClick={() => this.sort('title')}>\n              Title <SortIcon sort={this.props.sort} name=\"title\" />\n            </div>\n            <div className=\"column album\" onClick={() => this.sort('album')}>\n              Album <SortIcon sort={this.props.sort} name=\"album\" />\n            </div>\n            <div className=\"column artist\" onClick={() => this.sort('artist')}>\n              Artist <SortIcon sort={this.props.sort} name=\"artist\" />\n            </div>\n            <div className=\"column duration\" onClick={() => this.sort('duration')}>\n              Duration <SortIcon sort={this.props.sort} name=\"duration\" />\n            </div>\n          </div>\n          <div className=\"table-body\">\n            {!songs.length && !loading ? (\n              this.props.query.length ? (\n                <div className=\"no-data\">No songs for search query</div>\n              ) : (\n                <div className=\"no-data\">No songs for found</div>\n              )\n            ) : null}\n            {listItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({songsList: {songs, error, sort}, global: {loading, query}}) {\n  return {\n    songs, loading, error, sort, query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getSongs: (query, sort) => dispatch(actions.getSongs(query, sort)),\n    updateSort: (sort) => dispatch(actions.updateSort(sort)),\n    addToPlaylist: (song) => dispatch(actions.addToPlaylist(song))\n  };\n}\n\nconst SortIcon = ({sort, name}) => {\n  if(sort.property !== name) return null;\n  const iconName = {\n    asc: 'caret-up',\n    desc: 'caret-down'\n  };\n  let icon = iconName[sort.direction] || null;\n  return (\n    <FontAwesomeIcon icon={icon} className=\"sort-icon\" />\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../actions';\nimport './style.scss';\n\nclass AlbumList extends Component {\n  componentDidMount() {\n    const {query} = this.props;\n    this.props.getAlbums(query);\n  }\n\n  render() {\n    const {albums, error, loading} = this.props;\n    const listItems = albums.map(album => (\n      <div className=\"album\" key={album.id} onClick={() => {\n        this.props.replacePlaylist(album.songs.map(song => ({\n          song_id: song.id,\n          song: song\n        })));\n      }}>\n        <div className=\"thumbnail\"><img src={album.thumbnail} alt={album.title} /></div>\n        <div className=\"title\">{album.title}</div>\n      </div>\n    ));\n    const errorMessage = !error ? null : (<div className=\"error message\">{error}</div>);\n    return (\n      <div className=\"AlbumList\">\n        {errorMessage}\n        <h1>Albums</h1>\n        <div className=\"albums-body\">\n          {!albums.length && !loading ? <div className=\"no-data\">No albums for found</div> : null}\n          {listItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({albumList: {albums, error}, global: {loading}}) {\n  return {\n    albums, loading, error\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getAlbums: () => dispatch(actions.getAlbums()),\n    replacePlaylist: (newSongs) => dispatch(actions.replacePlaylist(newSongs))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumList);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function LoadSpinner(props) {\n  let classNames = '';\n  classNames += props.loading ? ' visible' : ' hidden';\n  return (\n    <div className={classNames}>\n      <FontAwesomeIcon icon=\"compact-disc\" className=\"spinner\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport packageJson from '../../package.json';\nimport actions from '../actions';\nimport LoadSpinner from './LoadSpinner';\nimport './AppHeader.scss';\n\nfunction AppHeader(props) {\n  const {loading} = props;\n  let searchRef = null;\n  return (\n    <div className=\"AppHeader\">\n      <h1>Music Library</h1>\n      <span className=\"version\">v{packageJson.version}</span>\n      <LoadSpinner loading={loading} />\n      <div className=\"search-form\">\n        <div className=\"search-field\">\n          <input\n            ref={ref => searchRef = ref}\n            defaultValue={props.query}\n            placeholder=\"Search Song, Album or Artist\"\n            onKeyUp={e => {\n            const query = e.target.value;\n            if(e.keyCode === 13) {\n              props.updateQuery(query);\n            }\n          }} />\n        <button onClick={() => {\n          props.updateQuery(searchRef.value);\n        }}><FontAwesomeIcon icon=\"search\" /></button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps({global: {loading, query}}) {\n  return {\n    loading, query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateQuery: (query) => dispatch(actions.updateQuery(query))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport memoize from 'memoize-one';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport actions from '../../actions';\nimport './style.scss';\n\nclass Player extends Component {\n  audio = null;\n  updateCurrentTimeFn = null;\n  state = {\n    duration: 0,\n    currentTime: 0\n  };\n\n  componentDidMount() {\n    this.props.getPlaylist();\n  }\n\n  playSong = () => {\n    const currentSong = this.props.songs.find(({id}) => id === this.props.selectedPlaylistItemId);\n    if(!currentSong) return;\n    const fileUri = currentSong.song.file;\n    const audio = this.audio;\n    let audioFile = null;\n    if(audio) {\n      audio.pause();\n      audio.currentTime = 0;\n      audio.removeEventListener('loadedmetadata', this.loadedMetaDataCallbackFn);\n      audio.removeEventListener('play', this.playCallbackFn);\n      audio.removeEventListener('pause', this.pauseCallbackFn);\n      audio.removeEventListener('ended', this.endedCallbackFn);\n    }\n    try {\n      audioFile = require(`../../songs/${fileUri}`);\n    } catch(e) {\n      //TODO: Display error message to user.\n      console.error(e);\n    }\n\n    if(audioFile) {\n      this.audio = new Audio(audioFile);\n      this.audio.play();\n    }\n  };\n\n  toggleSong = memoize((songs, status, selectedPlaylistItemId) => {\n    if(!status || !selectedPlaylistItemId) return;\n    if(status === 'playing') {\n      this.playSong();\n    } else if(status === 'resumed') {\n      this.audio.play();\n    } else if(status === 'paused') {\n      this.audio.pause();\n    } else if(status === 'stopped' && this.audio) {\n      this.audio.pause();\n      this.audio.currentTime = 0;\n    }\n  });\n\n  loadedMetaDataCallbackFn = ({target: audio}) => {\n    this.setState({duration: audio.duration});\n  };\n\n  playCallbackFn = (e) => {\n    const audio = e.target;\n    this.setState({currentTime: audio.currentTime});\n    this.updateCurrentTimeFn = setInterval(() => {\n      const audio = this.audio;\n      if(!audio) {\n        clearInterval(this.updateCurrentTimeFn);\n        return;\n      }\n      this.setState({currentTime: audio.currentTime});\n    }, 1000);\n  }\n\n  pauseCallbackFn = (e) => {\n    clearInterval(this.updateCurrentTimeFn);\n  }\n\n  endedCallbackFn = (e) => {\n    this.setState({currentTime: 0});\n    this.props.updatePlayerStatus('stopped');\n    clearInterval(this.updateCurrentTime);\n    this.props.playNextSong();\n    if(this.props.selectedPlaylistItemId) {\n      this.props.updatePlayerStatus('playing');\n    }\n  }\n\n  updateCurrentTime = memoize((selectedPlaylistItemId, audio) => {\n    if(audio) {\n      audio.addEventListener('loadedmetadata', this.loadedMetaDataCallbackFn);\n      audio.addEventListener('play', this.playCallbackFn);\n      audio.addEventListener('pause', this.pauseCallbackFn);\n      audio.addEventListener('ended', this.endedCallbackFn);\n    }\n  });\n\n  render() {\n    const {selectedPlaylistItemId, songs, status} = this.props;\n    if(status && selectedPlaylistItemId) {\n      this.toggleSong(songs, status, selectedPlaylistItemId);\n    }\n    const currentSong = songs.find(({id}) => id === selectedPlaylistItemId);\n    if(currentSong) {\n      this.updateCurrentTime(currentSong, this.audio);\n    }\n    return (\n      <div className=\"Player\">\n        <AlbumThumbnailControl\n          album={currentSong && currentSong.song.album}\n          status={status}\n          onControlClick={(status) => this.props.updatePlayerStatus(status)}\n        />\n        <Timeline\n          duration={this.state.duration}\n          currentTime={this.state.currentTime}\n          onSeek={time => {\n            if(this.audio) {\n              this.audio.currentTime = time;\n              this.setState({currentTime: time});\n            }\n          }} />\n        <div className=\"controls\">\n          <div className=\"player-title\">{currentSong ? currentSong.song.album.title : '--'}</div>\n        </div>\n        <Playlist\n          selectedPlaylistItemId={selectedPlaylistItemId}\n          status={status}\n          songs={songs}\n          onClick={item => {\n            this.props.changeCurrentSong(item);\n            this.props.updatePlayerStatus('playing');\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Playlist Component.\n * @param songs\n * @param currentSong\n * @param status\n * @param onClick\n * @returns {XML}\n * @constructor\n */\nfunction Playlist({songs, selectedPlaylistItemId, status, onClick}) {\n  const items = songs.map((item, index) => {\n    let currentSongIndicator = null;\n    if(item.id === selectedPlaylistItemId) {\n      let icon = (status === 'playing' || status === 'resumed') ? 'play' : (status === 'paused') ? 'pause' : null;\n      currentSongIndicator = icon && <FontAwesomeIcon icon={icon} className=\"current-song-indicator\" />\n    }\n\n    return (\n      <div key={index} className=\"row\" onClick={() => onClick(item)}>\n        {currentSongIndicator}\n        <div className=\"column title\">{item.song.title}</div>\n        <div className=\"column duration\">{item.song.duration.toFixed(2)}</div>\n      </div>\n    );\n  });\n  return(\n    <div className=\"Playlist\">{items}</div>\n  );\n}\n\nfunction mapStateToProps({playlist, player}) {\n  return {\n    selectedPlaylistItemId: playlist.selectedPlaylistItemId,\n    songs: playlist.songs,\n    status: player.status\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    pageChange: (page) => dispatch(actions.pageChange(page)),\n    getPlaylist: () => dispatch(actions.getPlaylist()),\n    changeCurrentSong: (item) => dispatch(actions.changeCurrentSong(item.id)),\n    playNextSong: () => dispatch(actions.playNextSong()),\n    updatePlayerStatus: (status) => dispatch(actions.updatePlayerStatus(status))\n  };\n}\n\n/**\n * Player's thumbnail and play/pause control button.\n * @param album\n * @param status\n * @param onControlClick\n * @returns {XML}\n * @constructor\n */\nfunction AlbumThumbnailControl({album, status, onControlClick}) {\n  let image = <FontAwesomeIcon icon=\"music\" className=\"icon\" />;\n\n  if(album && album.thumbnail) {\n    const style = {\n      color: 'red',\n      backgroundImage: `url(${album.thumbnail})`\n    };\n    image = <div style={style} />\n  }\n  let controlIcon = null;\n  if(status === 'playing' || status === 'resumed') {\n    controlIcon = <FontAwesomeIcon icon=\"pause\" className=\"control-icon\" onClick={() => onControlClick('paused')} />\n  } else if(status === 'paused') {\n    controlIcon = <FontAwesomeIcon icon=\"play\" className=\"control-icon\" onClick={() => onControlClick('resumed')} />\n  }\n  return (\n    <div className=\"thumbnail\">\n      {image}\n      {controlIcon}\n    </div>\n  );\n}\n\nclass Timeline extends Component {\n  render() {\n    let {duration, currentTime} = this.props;\n    const barWidth = 200;\n    const indicatorPosition = duration ? (barWidth / duration) * currentTime : 0;\n\n    return (\n      <div className=\"Timeline\">\n        <div\n          className=\"bar-background\"\n          style={{width: barWidth}}\n          onClick={e => {\n            const {left: barX} = e.target.getBoundingClientRect();\n            this.props.onSeek((duration / barWidth) * (e.clientX - barX));\n          }}\n        >\n          <div className=\"bar\" style={{width: `${indicatorPosition}px`}} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n\n","import React from 'react';\nimport SongsList from './components/songsList';\nimport AlbumList from './components/albumList';\nimport AppHeader from './components/AppHeader';\nimport Player from './components/player';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faCaretUp,\n  faCaretDown,\n  faSearch,\n  faCompactDisc,\n  faMusic,\n  faPlus,\n  faPlay,\n  faPause } from '@fortawesome/free-solid-svg-icons';\nimport './App.scss';\n\nlibrary.add([faCaretUp, faCaretDown, faSearch, faCompactDisc, faMusic, faPlus, faPlay, faPause]);\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <Player />\n      <div className=\"main\">\n        <div className=\"content\">\n          <SongsList />\n          <div className=\"album-widget\">\n            <AlbumList />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  SONGS_WILL_FETCH,\n  SONGS_DID_FETCH,\n  SONGS_FETCH_ERROR,\n  SORT_SONGS,\n  UPDATE_SEARCH_QUERY,\n  ALBUMS_WILL_FETCH,\n  ALBUMS_DID_FETCH,\n  ALBUMS_FETCH_ERROR,\n  PLAYLIST_WILL_FETCH,\n  PLAYLIST_DID_FETCH,\n  PLAYLIST_FETCH_ERROR,\n  PLAYLIST_CHANGE_CURRENT_SONG,\n  PLAYLIST_PLAY_NEXT_SONG,\n  ADD_TO_PLAYLIST,\n  PLAYER_STATUS_UPDATE,\n  REPLACE_PLAYLIST\n} from './actions';\n\n/**\n * Songs Reducer\n * @param initialState\n * @param type\n * @param payload\n * @returns {Object}\n */\nfunction songsReducer(initialState = {\n  songs: [],\n  sort: {property: 'title', direction: 'asc'},\n}, {type, payload}) {\n  const state = {};\n  switch(type) {\n    case SONGS_DID_FETCH:\n      state.songs = payload;\n      break;\n\n    case SONGS_FETCH_ERROR:\n      state.error = payload;\n      break;\n\n    case SORT_SONGS:\n      state.sort = Object.assign({}, payload);\n      break;\n\n    default:\n  }\n\n  return Object.assign({}, initialState, state);\n}\n\n/**\n * Album Reducer.\n * @param initialState\n * @param type\n * @param payload\n * @returns {Object}\n */\nfunction albumReducer(initialState = {albums: []}, {type, payload}) {\n  const state = {};\n  switch(type) {\n    case ALBUMS_DID_FETCH:\n      state.albums = payload;\n      break;\n\n    case ALBUMS_FETCH_ERROR:\n      state.error = payload;\n      break;\n\n    default:\n  }\n\n  return Object.assign({}, initialState, state);\n}\n\n/**\n * Global Reducer.\n * @param initialState\n * @param type\n * @param payload\n * @returns {Object}\n */\nfunction globalReducer(initialState = {query: '', loading: false}, {type, payload}) {\n  const state = {};\n  switch(type) {\n    case SONGS_WILL_FETCH:\n    case ALBUMS_WILL_FETCH:\n      state.loading = true;\n      break;\n\n    case UPDATE_SEARCH_QUERY:\n      state.query = payload;\n      break;\n\n    case SONGS_DID_FETCH:\n    case SONGS_FETCH_ERROR:\n    case ALBUMS_DID_FETCH:\n    case ALBUMS_FETCH_ERROR:\n      state.loading = false;\n      break;\n    default:\n  }\n  return Object.assign({}, initialState, state);\n}\n\n/**\n * Playlist Reducer.\n * @param initialState\n * @param type\n * @param payload\n * @returns {Object}\n */\nfunction playListReducer(initialState = {songs: [], selectedPlaylistItemId: null, loading: false}, {type, payload}) {\n  const state = {};\n  switch(type) {\n    case PLAYLIST_WILL_FETCH:\n      state.loading = true;\n      break;\n\n    case PLAYLIST_DID_FETCH:\n      state.loading = false;\n      state.songs = payload;\n      break;\n\n    case PLAYLIST_FETCH_ERROR:\n      state.loading = false;\n      break;\n\n    case PLAYLIST_CHANGE_CURRENT_SONG:\n      state.selectedPlaylistItemId = payload;\n      break;\n\n    case PLAYLIST_PLAY_NEXT_SONG:\n      const songs = initialState.songs;\n      const selectedPlaylistItemId = initialState.selectedPlaylistItemId;\n      const currentSongIndex = songs.findIndex(({id}) => id === selectedPlaylistItemId);\n      const nextSong = songs[currentSongIndex + 1];\n      if(nextSong) {\n        state.selectedPlaylistItemId = nextSong.id;\n      } else {\n        state.selectedPlaylistItemId = null;\n      }\n      break;\n\n    case ADD_TO_PLAYLIST:\n      state.songs = payload;\n      break;\n\n    case REPLACE_PLAYLIST:\n      state.songs = payload;\n      state.selectedPlaylistItemId = state.songs.length ? state.songs[0].id : null;\n      break;\n\n    default:\n  }\n  return Object.assign({}, initialState, state);\n}\n\n/**\n * Player Status Reducer.\n * @param initialState\n * @param type\n * @param payload\n * @returns {*}\n */\nfunction playerStatusReducer(initialState = {status: null}, {type, payload}) {\n  let state = {};\n  if(type === PLAYER_STATUS_UPDATE) {\n    state.status = payload;\n  }\n  if(type === REPLACE_PLAYLIST) {\n    state.status = 'playing';\n  }\n  return Object.assign({}, initialState, state);\n}\n\nexport default combineReducers({\n  global: globalReducer,\n  songsList: songsReducer,\n  albumList: albumReducer,\n  playlist: playListReducer,\n  player: playerStatusReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeArgs = [applyMiddleware(thunk)];\nif(process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION__) {\n  composeArgs.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n}\nconst store = createStore(\n  rootReducer,\n  compose(...composeArgs)\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}